module.exports.websocket = async (pool, schema) => {
  const client = await pool.connect();
  console.log(`Initializing ${schema}.websocket table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${schema}.websocket (
      connectionid varchar NULL,
      ttl TIMESTAMP NULL,
      chatroom_id varchar NOT NULL,
      CONSTRAINT fk_chatRoomId_wscat FOREIGN KEY(chatroom_id) REFERENCES ${schema}.chatroom(id)
    );`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.chatroom = async (pool, schema) => {
  const client = await pool.connect();
  console.log(`Initializing ${schema}.chatroom table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${schema}.chatroom (
      id varchar NOT NULL,
      name varchar NULL,
      type varchar NULL,
      created_at timestamp NULL,
      updated_at timestamp NULL,
      created_by varchar NULL,
      updated_by varchar NULL,
      PRIMARY KEY(id)
    );`;
    console.log('createTableQuery', createTableQuery)
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.user = async (pool, schema) => {
  const client = await pool.connect();
  console.log(`Initializing ${schema}.user table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${schema}.user (
      id varchar NOT NULL,
      chatroom_id varchar NOT NULL,
      name varchar NULL,
      user_name varchar NOT NULL UNIQUE,
      email varchar NOT NULL UNIQUE,
      phone varchar NOT NULL UNIQUE,
      created_at timestamp NULL,
      updated_at timestamp NULL,
      created_by varchar NULL,
      updated_by varchar NULL,
      PRIMARY KEY(id),
      CONSTRAINT fk_chatRoomId_user FOREIGN KEY(chatroom_id) REFERENCES ${schema}.chatroom(id)
    );`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.message = async (pool, schema) => {
  const client = await pool.connect();
  console.log(`Initializing ${schema}.message table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${schema}.message (
      id varchar NULL,
      chatroom_id varchar NULL,
      user_id varchar NULL,
      value varchar NULL,
      created_at timestamp NULL,
      updated_at timestamp NULL,
      created_by varchar NOT NULL,
      updated_by varchar NULL,
      PRIMARY KEY(id),
      CONSTRAINT fk_chatRoomId_message FOREIGN KEY(chatroom_id) REFERENCES ${schema}.chatroom(id)
      CONSTRAINT fk_userId_message FOREIGN KEY(user_id) REFERENCES ${schema}.user(id)
    );`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.schema = async (pool, stage) => {
  const client = await pool.connect();
  console.log(`Initializing Schema ${stage} table...`);
  try {
    const createTableQuery = `CREATE schema if not exists ${stage}`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating schema with error', err.message, err.stack);
  } finally {
    client.release();
  }
};