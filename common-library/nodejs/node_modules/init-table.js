module.exports.websocket = async (pool, organization, table) => {
  const client = await pool.connect();
  console.log(`Initializing ${organization}.${table} table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${organization}.${table} (
      connectionid varchar NULL,
      ttl TIMESTAMP NULL,
      chatroom_id varchar NOT NULL
    );`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.chatroom = async (pool, organization, table) => {
  const client = await pool.connect();
  console.log(`Initializing ${organization}.${table} table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${organization}.${table} (
      id varchar NOT NULL,
      name varchar NULL,
      type varchar NULL,
      createdAt timestamp NULL,
      updatedAt timestamp NULL,
      createdBy varchar NULL,
      updatedBy varchar NULL,
      PRIMARY KEY(id)
    );`;
    console.log('createTableQuery', createTableQuery)
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.user = async (pool, organization, table) => {
  const client = await pool.connect();
  console.log(`Initializing ${organization}.${table} table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${organization}.${table} (
      id varchar NOT NULL,
      name varchar NULL,
      email varchar NOT NULL UNIQUE,
      phone varchar NOT NULL UNIQUE,
      createdAt timestamp NULL,
      updatedAt timestamp NULL,
      createdBy varchar NULL,
      updatedBy varchar NULL,
      PRIMARY KEY(id),
      CONSTRAINT fk_chatRoomId_user FOREIGN KEY(chatRoomId) REFERENCES ${organization}.chatRoom(id)
    );`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.message = async (pool, organization, table) => {
  const client = await pool.connect();
  console.log(`Initializing ${organization}.${table} table...`);
  try {
    const createTableQuery = `CREATE table if not exists ${organization}.${table} (
      id varchar NULL,
      chatRoomId varchar NULL,
      createdAt timestamp NULL,
      updatedAt timestamp NULL,
      createdBy varchar NOT NULL,
      updatedBy varchar NULL,
      PRIMARY KEY(id),
      CONSTRAINT fk_userId_message FOREIGN KEY(createdBy) REFERENCES ${organization}.user(id)
    );`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating table with error', err.message, err.stack);
  } finally {
    client.release();
  }
};

module.exports.schema = async (pool, organization) => {
  const client = await pool.connect();
  console.log(`Initializing Schema ${organization} table...`);
  try {
    const createTableQuery = `CREATE schema if not exists ${organization}`;
    await client.query(createTableQuery);
  } catch (err) {
    console.log('error creating schema with error', err.message, err.stack);
  } finally {
    client.release();
  }
};